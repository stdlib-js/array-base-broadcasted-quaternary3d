{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar broadcastArray = require( '@stdlib/array-base-broadcast-array' );\n\n\n// MAIN //\n\n/**\n* Applies a quaternary callback to elements in four broadcasted input arrays and assigns results to elements in a three-dimensional nested output array.\n*\n* @param {ArrayLikeObject<Array>} arrays - array-like object containing four input nested arrays and one output nested array\n* @param {ArrayLikeObject<NonNegativeIntegerArray>} shapes - array shapes\n* @param {Callback} fcn - quaternary callback\n* @returns {void}\n*\n* @example\n* var add = require( '@stdlib/math-base-ops-add4' );\n* var ones3d = require( '@stdlib/array-base-ones3d' );\n* var zeros3d = require( '@stdlib/array-base-zeros3d' );\n*\n* var shapes = [\n*     [ 1, 1, 3 ],\n*     [ 3, 1, 1 ],\n*     [ 1, 3, 1 ],\n*     [ 3, 3, 3 ],\n*     [ 3, 3, 3 ]\n* ];\n*\n* var x = ones3d( shapes[ 0 ] );\n* var y = ones3d( shapes[ 1 ] );\n* var z = ones3d( shapes[ 2 ] );\n* var w = ones3d( shapes[ 3 ] );\n* var out = zeros3d( shapes[ 4 ] );\n*\n* bquaternary3d( [ x, y, z, w, out ], shapes, add );\n*\n* console.log( out );\n* // => [ [ [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ] ], [ [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ] ], [ [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ] ] ]\n*/\nfunction bquaternary3d( arrays, shapes, fcn ) { // eslint-disable-line max-statements\n\tvar dx0;\n\tvar dx1;\n\tvar dx2;\n\tvar dy0;\n\tvar dy1;\n\tvar dy2;\n\tvar dz0;\n\tvar dz1;\n\tvar dz2;\n\tvar dw0;\n\tvar dw1;\n\tvar dw2;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar j0;\n\tvar j1;\n\tvar j2;\n\tvar k0;\n\tvar k1;\n\tvar k2;\n\tvar m0;\n\tvar m1;\n\tvar m2;\n\tvar n0;\n\tvar n1;\n\tvar n2;\n\tvar x0;\n\tvar x1;\n\tvar y0;\n\tvar y1;\n\tvar z0;\n\tvar z1;\n\tvar w0;\n\tvar w1;\n\tvar u0;\n\tvar u1;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar x;\n\tvar y;\n\tvar z;\n\tvar w;\n\tvar u;\n\n\tsh = shapes[ 4 ];\n\tS0 = sh[ 2 ];\n\tS1 = sh[ 1 ];\n\tS2 = sh[ 0 ];\n\tif ( S0 <= 0 || S1 <= 0 || S2 <= 0 ) {\n\t\treturn;\n\t}\n\to = broadcastArray( arrays[ 0 ], shapes[ 0 ], sh );\n\tx = o.data;\n\tst = o.strides;\n\tdx0 = st[ 2 ];\n\tdx1 = st[ 1 ];\n\tdx2 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 1 ], shapes[ 1 ], sh );\n\ty = o.data;\n\tst = o.strides;\n\tdy0 = st[ 2 ];\n\tdy1 = st[ 1 ];\n\tdy2 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 2 ], shapes[ 2 ], sh );\n\tz = o.data;\n\tst = o.strides;\n\tdz0 = st[ 2 ];\n\tdz1 = st[ 1 ];\n\tdz2 = st[ 0 ];\n\n\to = broadcastArray( arrays[ 3 ], shapes[ 3 ], sh );\n\tw = o.data;\n\tst = o.strides;\n\tdw0 = st[ 2 ];\n\tdw1 = st[ 1 ];\n\tdw2 = st[ 0 ];\n\n\tu = arrays[ 4 ];\n\n\tj2 = 0;\n\tk2 = 0;\n\tm2 = 0;\n\tn2 = 0;\n\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\tj1 = 0;\n\t\tk1 = 0;\n\t\tm1 = 0;\n\t\tn1 = 0;\n\t\tx1 = x[ j2 ];\n\t\ty1 = y[ k2 ];\n\t\tz1 = z[ m2 ];\n\t\tw1 = w[ n2 ];\n\t\tu1 = u[ i2 ];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\tj0 = 0;\n\t\t\tk0 = 0;\n\t\t\tm0 = 0;\n\t\t\tn0 = 0;\n\t\t\tx0 = x1[ j1 ];\n\t\t\ty0 = y1[ k1 ];\n\t\t\tz0 = z1[ m1 ];\n\t\t\tw0 = w1[ n1 ];\n\t\t\tu0 = u1[ i1 ];\n\t\t\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\t\t\tu0[ i0 ] = fcn( x0[ j0 ], y0[ k0 ], z0[ m0 ], w0[ n0 ] );\n\t\t\t\tj0 += dx0;\n\t\t\t\tk0 += dy0;\n\t\t\t\tm0 += dz0;\n\t\t\t\tn0 += dw0;\n\t\t\t}\n\t\t\tj1 += dx1;\n\t\t\tk1 += dy1;\n\t\t\tm1 += dz1;\n\t\t\tn1 += dw1;\n\t\t}\n\t\tj2 += dx2;\n\t\tk2 += dy2;\n\t\tm2 += dz2;\n\t\tn2 += dw2;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = bquaternary3d;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a quaternary callback to elements in four broadcasted input arrays and assign results to elements in a three-dimensional nested output array.\n*\n* @module @stdlib/array-base-broadcasted-quaternary3d\n*\n* @example\n* var add = require( '@stdlib/math-base-ops-add4' );\n* var ones3d = require( '@stdlib/array-base-ones3d' );\n* var zeros3d = require( '@stdlib/array-base-zeros3d' );\n* var bquaternary3d = require( '@stdlib/array-base-broadcasted-quaternary3d' );\n*\n* var shapes = [\n*     [ 1, 1, 3 ],\n*     [ 3, 1, 1 ],\n*     [ 1, 3, 1 ],\n*     [ 3, 3, 3 ],\n*     [ 3, 3, 3 ]\n* ];\n*\n* var x = ones3d( shapes[ 0 ] );\n* var y = ones3d( shapes[ 1 ] );\n* var z = ones3d( shapes[ 2 ] );\n* var w = ones3d( shapes[ 3 ] );\n* var out = zeros3d( shapes[ 4 ] );\n*\n* bquaternary3d( [ x, y, z, w, out ], shapes, add );\n*\n* console.log( out );\n* // => [ [ [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ] ], [ [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ] ], [ [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ], [ 4.0, 4.0, 4.0 ] ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "broadcastArray", "bquaternary3d", "arrays", "shapes", "fcn", "dx0", "dx1", "dx2", "dy0", "dy1", "dy2", "dz0", "dz1", "dz2", "dw0", "dw1", "dw2", "S0", "S1", "S2", "i0", "i1", "i2", "j0", "j1", "j2", "k0", "k1", "k2", "m0", "m1", "m2", "n0", "n1", "n2", "x0", "x1", "y0", "y1", "z0", "z1", "w0", "w1", "u0", "u1", "sh", "st", "o", "x", "y", "z", "w", "u", "main"]
}
